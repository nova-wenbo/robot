C51 COMPILER V9.54   MAIN                                                                  05/22/2017 23:25:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <math.h>
   3          #include <delay.h>
   4          #include <common.h>
   5          sbit KG=P1^7;
   6          uchar position[8];//用于记录8个舵机的位置
   7          uchar pick_up[8];           //kouchu[8];各个io口轮流输出是屏蔽其它位
   8          uchar arr[8];               //提供排序空间 paixu_ncha[8]=0;中间过度用      
   9          uchar t0bit=0;          //定时器0周期相同标志位
  10          uchar N;
  11          
  12          //关于扫尾值的参数
  13          uchar zsax=15; //14h,z 平面sa 修正参数           p da  z  xiao  
  14          uchar psax=10; //15h,p 平面sa 修正参数交互2
  15          uchar zsag=20; //16h,z 平面sa 过渡参数
  16          uchar psag=20;//17h,p 平面sa 过渡参数
  17          /*************************************************************************************
  18          函数名称：void low_level_500u
  19          函数功能：PWM信号低电平时间子程序，控制舵机PWM信号的低电平时间决定舵机转动的速度  积分思想
  20          输入    ：time
  21          输出    ：无
  22          *************************************************************************************/
  23          void low_level_500u(uint time)
  24          {
  25   1        uint i; 
  26   1        for(i=0;i<time;i++)
  27   1        {delay500us(1);}
  28   1      }
  29          /*************************************************************************************
  30          函数名称：void t0_init
  31          函数功能：t0定时器初始化，用于舵机2.5ms定时
  32          输入    ：无 
  33          输出    ：无
  34          备注    ：没有开启定时
  35          *************************************************************************************/
  36          void t0_init(void)
  37          {
  38   1        TMOD  = TMOD & 0xf0;        //初始化定时器1的计数方式为方式1     无用
  39   1        TMOD  = TMOD | 0x01;
  40   1      
  41   1        TH0=0xee;               //22.1184MHz,2.5Ms定时ee00
  42   1        TL0=0x00;
  43   1        ET0=1;            
  44   1        EA=1;
  45   1        t0bit=1;
  46   1      }
  47          /*************************************************************************************
  48          函数名称：void low_level_t0
  49          函数功能：同周期定时器0设置及启动程序，使每变化一个变化量的周期相同  给寄存器填值
  50          输入    ：THTL
  51          输出    ：无
  52          *************************************************************************************/
  53          void low_level_t0(uint THTL)
  54          {
C51 COMPILER V9.54   MAIN                                                                  05/22/2017 23:25:22 PAGE 2   

  55   1        TH0=THTL>>8;        //22.1184MHz,2.5Ms定时ee00
  56   1        TL0=THTL;
  57   1        t0bit=0;
  58   1        TR0=1;
  59   1      }
  60          /*************************************************************************************
  61          函数名称：void T0_Interrupt(void) interrupt 1
  62          函数功能：定时器t0中断服务函数函数  中断一次填一次值 标记一次一个2.5ms到了
  63          输入    ：
  64          输出    ：无
  65          *************************************************************************************/
  66          void T0_Interrupt(void) interrupt 1
  67          {  
  68   1         TH0=0xee;         //22.1184MHz,2.5Ms定时ee00
  69   1         TL0=0x00;
  70   1         t0bit=1;
  71   1      }
  72          /*************************************************************************************
  73          函数名称：init_cpu
  74          函数功能：单片机初始化程序
  75          输入    ：无
  76          输出    ：无
  77          *************************************************************************************/
  78          void  init_cpu(void)
  79          {                         
  80   1        t0_init();            //定时器0初始化
  81   1        delay500us(10);
  82   1      }
  83          /*************************************************************************************
  84          函数名称：array()
  85          函数功能：排序子程序，将各个口的8位根据时间的长短排序 提供arr[i]=arr[i]- arr[i+1]相邻差值
  86          输入    ：无
  87          输出    ：无
  88          *************************************************************************************/
  89          void array()
  90          { 
  91   1        uchar i=0,j=0,x=0;
  92   1      
  93   1        pick_up[0]=0xFE;
  94   1          pick_up[1]=0xFD;
  95   1          pick_up[2]=0xFB;
  96   1          pick_up[3]=0xF7;
  97   1          pick_up[4]=0xEF;
  98   1          pick_up[5]=0xDF;
  99   1          pick_up[6]=0xBF;
 100   1          pick_up[7]=0x7F;  //赋值
 101   1      
 102   1        //冒泡排序
 103   1        for(i=0;i<=6;i++)
 104   1        {    for(j=i+1;j<=7;j++)
 105   2               {
 106   3            if(arr[i]<arr[j])//交换数据
 107   3            {
 108   4              x=arr[j];
 109   4              arr[j]=arr[i];
 110   4              arr[i]=x;
 111   4                  
 112   4              x=pick_up[j];
 113   4              pick_up[j]=pick_up[i];
 114   4                      pick_up[i]=x;  
 115   4                   }
 116   3               }
C51 COMPILER V9.54   MAIN                                                                  05/22/2017 23:25:22 PAGE 3   

 117   2        } 
 118   1        for(i=0;i<7;i++)
 119   1          {
 120   2          arr[i]= arr[i]- arr[i+1];
 121   2          }     
 122   1      }
 123          /*************************************************************************************
 124          函数名称：void PWM_8()
 125          函数功能：8路舵机输出子程序，实现8路舵机的PWM信号在最短的时间内输出
 126          输入    ：position[i]
 127          输出    ：无
 128          备注    ：P0口
 129          *************************************************************************************/
 130          void PWM_8()
 131          {
 132   1        uchar i=0,j;
 133   1      
 134   1        for(i=0;i<8;i++)          //取P0口舵机对应的值
 135   1        {arr[i]=position[i];}
 136   1          array();                 //排序计算   
 137   1        low_level_t0(0xee00);   //开启定时器并赋初始值,   22.1184MHz,2.5Ms定时ee00                 
 138   1          P0=0xff;                  //使口P0全部拉高
 139   1          delay500us(1);            //调用延时500us函数
 140   1          for(i=0;i<8;i++)          //P0口8路同时输出
 141   1          {      
 142   2          for(j=0;j<arr[7-i];j++)   //此时arr为（安位置大小）相邻舵机位置相差值
 143   2          {delay8us(1);}
 144   2              P0=P0&pick_up[7-i];     //此时pick_up为 代表的是那一位为0 逻辑与后拉低
 145   2          } 
 146   1          while(t0bit==0);           //等待2.5ms应该说是一个周期的到来  可自定义    
 147   1        TR0=0;               //关闭定时器0
 148   1      }
 149          /*************************************************************************************
 150          函数名称：initial_position();
 151          函数功能：初始位置子程序，根据各个舵机的不同位置设置初始位置
 152          输入    ：无
 153          输出    ：无
 154          *************************************************************************************/
 155          void initial_position(void)                 
 156          {
 157   1        uint i,j,x=0;
 158   1        for(i=0;i<30;i++)
 159   1        { x++;
 160   2          position[0]=253; //0号(舵机)
 161   2          position[1]=125; //1号
 162   2          position[2]=132; //2号
 163   2          position[3]=124; //3号
 164   2          position[4]=125; //4号
 165   2          position[5]=118; //5号
 166   2          position[6]=125; //6号
 167   2          position[7]=125; //7号
 168   2                              
 169   2          PWM_8();
 170   2          if(x<10)
 171   2              {j=20;j--;
 172   3          low_level_500u(j);
 173   3          }
 174   2          else 
 175   2              { j=10;
 176   3              j++;
 177   3                  low_level_500u(j);
 178   3              }              
C51 COMPILER V9.54   MAIN                                                                  05/22/2017 23:25:22 PAGE 4   

 179   2        }
 180   1      }
 181          void go_ahead(void)
 182          {
 183   1        uchar i,j,t;
 184   1        j=9;
 185   1        for(i=0;i<10;i++)
 186   1        {
 187   2          if(i<15)
 188   2          {
 189   3            position[0]++;
 190   3          }
 191   2            PWM_8();
 192   2            if(i<5){j--;}
 193   2            if(i>=5&&i<70){j=2;}
 194   2            if(i>=70&&i<75){j++;}
 195   2            delay100us(8*j);
 196   2          }   
 197   1        delay500ms(4);
 198   1          
 199   1          for(i=0;i<10;i++)
 200   1        {
 201   2          if(i<15)
 202   2          {
 203   3            position[0]--;
 204   3          }
 205   2            PWM_8();
 206   2            if(i<5){j--;}
 207   2            if(i>=5&&i<70){j=2;}
 208   2            if(i>=70&&i<75){j++;}
 209   2            delay100us(8*j);
 210   2         }
 211   1      
 212   1      
 213   1      }
*** WARNING C280 IN LINE 183 OF main.c: 't': unreferenced local variable
 214          
 215          void main()
 216          {
 217   1        SP=0x70;     //堆栈指针初始化 
 218   1        P0M1 = 0x00;//P0 as Digital OUTPUT
 219   1        P0M0 = 0x00;      
 220   1        init_cpu();//初始化cpu  设置定时器  
 221   1        delay500us(10);
 222   1        P0=0xff;
 223   1        delay500ms(1);
 224   1        initial_position();//初始位置 
 225   1        delay500ms(1);  
 226   1        while(KG)   
 227   1        {
 228   2          if(!KG)
 229   2          delay500us(1);            //调用延时500us函数
 230   2          if(!KG)
 231   2          break;
 232   2        }                 
 233   1       
 234   1      
 235   1      //   go_ahead();   
 236   1         while(1);   
 237   1      }


C51 COMPILER V9.54   MAIN                                                                  05/22/2017 23:25:22 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    764    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
